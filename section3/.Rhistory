s_res = stack(rlist)
crs(s_res)="+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0"
v1 = stack(s_res$Columba_punicea,s_res$Buceros_bicornis,s_res$Leptoptilos_javanicus,s_res$Ciconia_episcopus,s_res$Ptilocichla_leucogrammica,s_res$Actenoides_hombroni,s_res$Arborophila_charltonii,s_res$Lophura_erythrophthalma,s_res$Ducula_pickeringii,s_res$Setornis_criniger,s_res$Treron_capellei,s_res$Cyornis_caerulatus,s_res$Centropus_rectunguis,s_res$Caprimulgus_concretus,s_res$Otus_sagittatus,s_res$Pitta_steerii,s_res$Prioniturus_platenae,s_res$Hypothymis_coelestis,s_res$Ptilocichla_falcata,s_res$Ptilinopus_marchei,s_res$Erythrura_viridifacies,s_res$Anthracoceros_marchei,s_res$Ceyx_melanurus,s_res$Chloropsis_flavipennis,s_res$Buceros_hydrocorax,s_res$Todiramphus_winchelli,s_res$Dicaeum_haematostictum,s_res$Aceros_leucocephalus,s_res$Eos_cyanogenia,s_res$Treron_floris,s_res$Pitta_venusta,s_res$Habroptila_wallacii,s_res$Eulipoa_wallacei,s_res$Macgregoria_pulchra,s_res$Arborophila_orientalis,s_res$Salvadorina_waigiuensis,s_res$Todiramphus_funebris,s_res$Megapodius_bernsteinii,s_res$Eurostopodus_diabolicus,s_res$Tyto_inexspectata,s_res$Amaurornis_magnirostris)
v_rast = calc(v1, sum)
v_rast
v_rastn=v_rast/14.4325
rc_v_rastn <- reclassify(v_rastn, rclmat)
m <- c(0, 0.2, 1,  0.2, 0.6, 2,  0.6, 1, 3)
rclmat <- matrix(m, ncol=3, byrow=TRUE)
rc_v_rastn <- reclassify(v_rastn, rclmat)
#writeRaster(rc_v_rastn,"VulScaled_P.tif")
writeRaster(rc_v_rastn,"VulScaled_csiro_b2.tif")
nt1 = dropLayer(s_res,c("Columba_punicea","Buceros_bicornis",'Leptoptilos_javanicus','Ciconia_episcopus','Ptilocichla_leucogrammica','Actenoides_hombroni','Arborophila_charltonii','Lophura_erythrophthalma','Ducula_pickeringii','Setornis_criniger','Treron_capellei','Cyornis_caerulatus','Columba_punicea','Centropus_rectunguis','Caprimulgus_concretus','Otus_sagittatus','Pitta_steerii','Prioniturus_platenae','Hypothymis_coelestis','Ptilocichla_falcata','Ptilinopus_marchei','Erythrura_viridifacies','Actenoides_hombroni','Anthracoceros_marchei','Ceyx_melanurus','Chloropsis_flavipennis','Buceros_hydrocorax','Todiramphus_winchelli','Dicaeum_haematostictum','Aceros_leucocephalus','Eos_cyanogenia','Treron_floris','Pitta_venusta','Habroptila_wallacii','Eulipoa_wallacei','Macgregoria_pulchra','Arborophila_orientalis','Salvadorina_waigiuensis','Todiramphus_funebris','Megapodius_bernsteinii','Eurostopodus_diabolicus','Tyto_inexspectata','Caprimulgus_concretus','Amaurornis_magnirostris','Leptoptilos_dubius','Pavo_muticus','Asarcornis_scutulata','Tringa_guttifer','Leptoptilos_dubius','Rheinardia_ocellata','Heliopais_personatus',
'Scolopax_rochussenii',
'Ciconia_stormi','Copsychus_cebuensis','Dasycrotapha_speciosa','Penelopides_mindorensis','Corvus_florensis','Ninox_sumbaensis','Macrocephalon_maleo','Cyornis_sanfordi','Platysmurus_leucopterus','Rhinomyias_brunneatus','Cittura_cyanotis','Ficedula_dumetoria',
'Terpsiphone_cyanescens','Psittaculirostris_salvadorii'))
nt_rast = calc(nt1, sum)
nt_rast
nt_rastn=nt_rast/75.91313
rc_nt_rastn <- reclassify(nt_rastn, rclmat)
writeRaster(rc_nt_rastn,"NTScaled_csiro_b2.tif")
GETWD()
getwd()
writeRaster(rc_nt_rastn,"/Volumes/Seagate Backup Plus Drive/global data/1_Avians_SEAsia/FutureDist/SRES/B1/csiro_mk3_5_sres_b1_2050s_bio_2_5min_no_tile_asc/maxent_csiro-b2/1_hsm_b2/NTScaled_csiro_b2.tif")
setwd("/Volumes/Seagate Backup Plus Drive/global data/1_Avians_SEAsia/FutureDist/SRES/B1/csiro_mk3_5_sres_b1_2050s_bio_2_5min_no_tile_asc/maxent_csiro-b2/1_hsm_b2")
library(raster)
library(rasterVis)
library(maptools)
library(rgdal)
library(sf)
library(sp)
library(rgeos)
#library(tidyverse)
library(dplyr)
cr=raster("CRScaled_csiro_b2.tif")
en=raster("EndScaled_csiro_b2.tif")
vul=raster("VulScaled_csiro_b2.tif")
nt=raster("NTScaled_csiro_b2.tif")
khm=readShapePoly("/Volumes/Seagate Backup Plus Drive/global data/1_Avians_SEAsia/PAs/KHM_pa")
lao=readShapePoly("/Volumes/Seagate Backup Plus Drive/global data/1_Avians_SEAsia/PAs/LAO_pa")
mmr=readShapePoly("/Volumes/Seagate Backup Plus Drive/global data/1_Avians_SEAsia/PAs/WDPA_Feb2019_MMR-shapefile-polygons")
th=readShapePoly("/Volumes/Seagate Backup Plus Drive/global data/1_Avians_SEAsia/PAs/WDPA_Feb2019_THA-shapefile-polygons")
vnm=readShapePoly("/Volumes/Seagate Backup Plus Drive/global data/1_Avians_SEAsia/PAs/WDPA_Feb2019_VNM-shapefile-polygons")
mys=readShapePoly("/Volumes/Seagate Backup Plus Drive/global data/1_Avians_SEAsia/PAs/WDPA_Feb2019_MYS-shapefile-polygons")
idn=readShapePoly("/Volumes/Seagate Backup Plus Drive/global data/1_Avians_SEAsia/PAs/WDPA_Feb2019_IDN-shapefile-polygons")
phl=readShapePoly("/Volumes/Seagate Backup Plus Drive/global data/1_Avians_SEAsia/PAs/WDPA_Feb2019_PHL-shapefile-polygons")
brn=readShapePoly("/Volumes/Seagate Backup Plus Drive/global data/1_Avians_SEAsia/PAs/WDPA_Feb2019_BRN-shapefile-polygons")
ex_cr <- extract(x=cr, y=khm, df=TRUE)
summary(ex_cr$CRScaled_csiro_a2)
ex_cr=na.omit(ex_cr)
ex_cr$CRScaled_csiro_a2=as.factor(ex_cr$CRScaled_csiro_a2)
ex_cr <- extract(x=cr, y=khm, df=TRUE)
summary(ex_cr$CRScaled_csiro_b2)
ex_cr=na.omit(ex_cr)
ex_cr$CRScaled_csiro_b2=as.factor(ex_cr$CRScaled_csiro_b2)
ex_cr$ID=as.factor(ex_cr$ID)
ex_cr %>% group_by(CRScaled_csiro_b2) %>% tally()
350/2305
1753/2305
202/2305
ex_en <- extract(x=en, y=khm, df=TRUE)
summary(ex_en$EndScaled_csiro_a2)
ex_en=na.omit(ex_en)
ex_en$EndScaled_csiro_a2=as.factor(ex_en$EndScaled_csiro_a2)
summary(ex_en$EndScaled_csiro_b2)
ex_en=na.omit(ex_en)
ex_en$EndScaled_csiro_b2=as.factor(ex_en$EndScaled_csiro_b2)
ex_en$ID=as.factor(ex_en$ID)
ex_en %>% group_by(EndScaled_csiro_b2) %>% tally()
471/2305
1825/2305
9/2305
ex_vu <- extract(x=vul, y=khm, df=TRUE)
ex_vu=na.omit(ex_vu)
summary(ex_vu$VulScaled_csiro_b2)
ex_vu$VulScaled_csiro_b2=as.factor(ex_vu$VulScaled_csiro_b2)
ex_vu$ID=as.factor(ex_vu$ID)
ex_vu %>% group_by(VulScaled_csiro_b2) %>% tally()
59/2305
2188/2305
58/2305
ex_nt <- extract(x=nt, y=khm, df=TRUE)
summary(ex_nt$NTScaled_csiro_b2)
ex_nt=na.omit(ex_nt)
ex_nt$NTScaled_csiro_b2=as.factor(ex_nt$NTScaled_csiro_b2)
ex_nt$ID=as.factor(ex_nt$ID)
ex_nt %>% group_by(NTScaled_csiro_b2) %>% tally()
33/2305
1883/2305
389/2305
ex_cr <- extract(x=cr, y=lao, df=TRUE)
summary(ex_cr$CRScaled_csiro_b2)
ex_cr=na.omit(ex_cr)
ex_cr$CRScaled_csiro_b2=as.factor(ex_cr$CRScaled_csiro_b2)
ex_cr$ID=as.factor(ex_cr$ID)
ex_cr %>% group_by(CRScaled_csiro_b2) %>% tally()
28/2305
450/2305
1654/2305
ex_en <- extract(x=en, y=lao, df=TRUE)
summary(ex_en$EndScaled_csiro_b2)
ex_en=na.omit(ex_en)
ex_en$EndScaled_csiro_b2=as.factor(ex_en$EndScaled_csiro_b2)
ex_en$ID=as.factor(ex_en$ID)
ex_en %>% group_by(EndScaled_csiro_b2) %>% tally()
ex_cr %>% group_by(CRScaled_csiro_a2) %>% tally()
ex_cr %>% group_by(CRScaled_csiro_b2) %>% tally()
28/2132
450/2132
1654/2132
ex_en <- extract(x=en, y=lao, df=TRUE)
summary(ex_en$EndScaled_csiro_b2)
ex_en=na.omit(ex_en)
ex_en$EndScaled_csiro_b2=as.factor(ex_en$EndScaled_csiro_b2)
ex_en$ID=as.factor(ex_en$ID)
ex_en %>% group_by(EndScaled_csiro_b2) %>% tally()
829/2312
1303/2312
setwd("/Volumes/Seagate Backup Plus Drive/global data/1_Avians_SEAsia/FutureDist/SRES/B1/csiro_mk3_5_sres_b1_2050s_bio_2_5min_no_tile_asc/maxent_csiro_projfc-b2")
rlist=list.files(getwd(), pattern="asc$", full.names=FALSE)
for(i in rlist) { assign(unlist(strsplit(i, "[.]"))[1], raster(i)) }
s_res = stack(rlist)
crs(s_res)="+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0"
m <- c(0, 0.2, 1,  0.2, 0.6, 2,  0.6, 1, 3)
rclmat <- matrix(m, ncol=3, byrow=TRUE)
############## CR birds
c1 = stack(s_res$Gyps_bengalensis,s_res$Pseudibis_davisoni,s_res$Sarcogyps_calvus,
s_res$Fregata_andrewsi,s_res$Alcedo_euryzona,s_res$Centropus_steerii)
cr_rast = calc(c1, sum)
cr_rast
cr_rastn=cr_rast/4.727203
rc_cr_rastn <- reclassify(cr_rastn, rclmat)
getwd()
writeRaster(rc_cr_rastn,"/Volumes/Seagate Backup Plus Drive/global data/1_Avians_SEAsia/FutureDist/SRES/B1/csiro_mk3_5_sres_b1_2050s_bio_2_5min_no_tile_asc/maxent_csiro_projfc-b2/1_hsm_b2/CRScaled_csiro_b2-lulc.tif")
writeRaster(rc_cr_rastn,"/Volumes/Seagate Backup Plus Drive/global data/1_Avians_SEAsia/FutureDist/SRES/B1/csiro_mk3_5_sres_b1_2050s_bio_2_5min_no_tile_asc/maxent_csiro_projfc-b2/1_hsm_b2_lulc/CRScaled_csiro_b2-lulc.tif")
setwd("/Volumes/Seagate Backup Plus Drive/global data/1_Avians_SEAsia/FutureDist/SRES/B1/csiro_mk3_5_sres_b1_2050s_bio_2_5min_no_tile_asc/maxent_csiro_projfc-b2")
library(raster)
rlist=list.files(getwd(), pattern="asc$", full.names=FALSE)
for(i in rlist) { assign(unlist(strsplit(i, "[.]"))[1], raster(i)) }
s_res = stack(rlist)
crs(s_res)="+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0"
setwd("/Volumes/Seagate Backup Plus Drive/global data/1_Avians_SEAsia/FutureDist/SRES/B1/csiro_mk3_5_sres_b1_2050s_bio_2_5min_no_tile_asc/maxent_csiro-b2/1_hsm_b2")
library(raster)
library(rasterVis)
library(maptools)
library(rgdal)
library(sf)
library(sp)
library(rgeos)
#library(tidyverse)
library(dplyr)
khm=readShapePoly("/Volumes/Seagate Backup Plus Drive/global data/1_Avians_SEAsia/PAs/KHM_pa")
lao=readShapePoly("/Volumes/Seagate Backup Plus Drive/global data/1_Avians_SEAsia/PAs/LAO_pa")
mmr=readShapePoly("/Volumes/Seagate Backup Plus Drive/global data/1_Avians_SEAsia/PAs/WDPA_Feb2019_MMR-shapefile-polygons")
th=readShapePoly("/Volumes/Seagate Backup Plus Drive/global data/1_Avians_SEAsia/PAs/WDPA_Feb2019_THA-shapefile-polygons")
vnm=readShapePoly("/Volumes/Seagate Backup Plus Drive/global data/1_Avians_SEAsia/PAs/WDPA_Feb2019_VNM-shapefile-polygons")
mys=readShapePoly("/Volumes/Seagate Backup Plus Drive/global data/1_Avians_SEAsia/PAs/WDPA_Feb2019_MYS-shapefile-polygons")
idn=readShapePoly("/Volumes/Seagate Backup Plus Drive/global data/1_Avians_SEAsia/PAs/WDPA_Feb2019_IDN-shapefile-polygons")
phl=readShapePoly("/Volumes/Seagate Backup Plus Drive/global data/1_Avians_SEAsia/PAs/WDPA_Feb2019_PHL-shapefile-polygons")
brn=readShapePoly("/Volumes/Seagate Backup Plus Drive/global data/1_Avians_SEAsia/PAs/WDPA_Feb2019_BRN-shapefile-polygons")
ex_nt <- extract(x=nt, y=mys, df=TRUE)
nt=raster("NTScaled_csiro_b2.tif")
ex_nt <- extract(x=nt, y=mys, df=TRUE)
summary(ex_nt$NTScaled_csiro_b2)
ex_nt=na.omit(ex_nt)
ex_nt$NTScaled_csiro_b2=as.factor(ex_nt$NTScaled_csiro_b2)
ex_nt$ID=as.factor(ex_nt$ID)
ex_nt %>% group_by(NTScaled_csiro_b2) %>% tally()
938/1800
862/1800
c=read.csv("1HSM_csiroB2.csv")
head(c)
library(ggplot2)
ce=ggplot(data=c, aes(x=Suitability, y=Percent_CvrCE, fill=Country)) +
geom_bar(stat="identity", position=position_dodge())+
coord_flip()+labs(title="Critically Endangered")
e=ggplot(data=c, aes(x=Suitability, y=Percent_CvrEnd, fill=Country)) +
geom_bar(stat="identity", position=position_dodge())+
coord_flip()+labs(title="Endangered Birds")
v=ggplot(data=c, aes(x=Suitability, y=Percent_CvrVul, fill=Country)) +
geom_bar(stat="identity", position=position_dodge())+
coord_flip()+labs(title="Vulnerable Birds")
n=ggplot(data=c, aes(x=Suitability, y=Percent_CvrNT, fill=Country)) +
geom_bar(stat="identity", position=position_dodge())+
coord_flip()+labs(title="Near Threatened")
ce
e
n
ce
e
v
n
setwd("/Volumes/Seagate Backup Plus Drive/global data/1_Avians_SEAsia/FutureDist/SRES/B1/csiro_mk3_5_sres_b1_2050s_bio_2_5min_no_tile_asc/maxent_csiro_projfc-b2/1_hsm_b2_lulc")
library(raster)
library(rasterVis)
library(maptools)
library(rgdal)
library(sf)
library(sp)
library(rgeos)
#library(tidyverse)
library(dplyr)
cr=raster("CRScaled_csiro_b2-lulc.tif")
cr=raster("CRScaled_csiro_b2-lulc.tif")
en=raster("EndScaled_csiro_b2-lulc.tif")
vul=raster("VulScaled_csiro_b2-lulc.tif")
nt=raster("NTScaled_csiro_b2-lulc.tif")
khm=readShapePoly("/Volumes/Seagate Backup Plus Drive/global data/1_Avians_SEAsia/PAs/KHM_pa")
lao=readShapePoly("/Volumes/Seagate Backup Plus Drive/global data/1_Avians_SEAsia/PAs/LAO_pa")
mmr=readShapePoly("/Volumes/Seagate Backup Plus Drive/global data/1_Avians_SEAsia/PAs/WDPA_Feb2019_MMR-shapefile-polygons")
th=readShapePoly("/Volumes/Seagate Backup Plus Drive/global data/1_Avians_SEAsia/PAs/WDPA_Feb2019_THA-shapefile-polygons")
vnm=readShapePoly("/Volumes/Seagate Backup Plus Drive/global data/1_Avians_SEAsia/PAs/WDPA_Feb2019_VNM-shapefile-polygons")
mys=readShapePoly("/Volumes/Seagate Backup Plus Drive/global data/1_Avians_SEAsia/PAs/WDPA_Feb2019_MYS-shapefile-polygons")
idn=readShapePoly("/Volumes/Seagate Backup Plus Drive/global data/1_Avians_SEAsia/PAs/WDPA_Feb2019_IDN-shapefile-polygons")
phl=readShapePoly("/Volumes/Seagate Backup Plus Drive/global data/1_Avians_SEAsia/PAs/WDPA_Feb2019_PHL-shapefile-polygons")
brn=readShapePoly("/Volumes/Seagate Backup Plus Drive/global data/1_Avians_SEAsia/PAs/WDPA_Feb2019_BRN-shapefile-polygons")
####### Overlap with PAs
ex_cr <- extract(x=cr, y=khm, df=TRUE)
summary(ex_cr$CRScaled_csiro_b2-lulc)
summary(ex_cr$CRScaled_csiro_b2-lulc)
head(ex_cr)
summary(ex_cr$CRScaled_csiro_b2.lulc)
summary(ex_cr$CRScaled_csiro_b2.lulc)
ex_cr=na.omit(ex_cr)
ex_cr$CRScaled_csiro_b2.lulc=as.factor(ex_cr$CRScaled_csiro_b2.lulc)
ex_cr$ID=as.factor(ex_cr$ID)
ex_cr %>% group_by(CRScaled_csiro_b2.lulc) %>% tally()
ex_en <- extract(x=en, y=khm, df=TRUE)
summary(ex_en$EndScaled_csiro_b2.lulc)
ex_en=na.omit(ex_en)
ex_en$EndScaled_csiro_b2.lulc=as.factor(ex_en$EndScaled_csiro_b2.lulc)
ex_en$ID=as.factor(ex_en$ID)
ex_en %>% group_by(EndScaled_csiro_b2.lulc) %>% tally()
ex_nt <- extract(x=nt, y=khm, df=TRUE)
summary(ex_nt$NTScaled_csiro_b2.lulc)
ex_nt=na.omit(ex_nt)
ex_nt$NTScaled_csiro_b2.lulc=as.factor(ex_nt$NTScaled_csiro_b2.lulc)
ex_nt$ID=as.factor(ex_nt$ID)
ex_nt %>% group_by(NTScaled_csiro_b2.lulc) %>% tally()
544/2750
2206/2750
435/2750
2315/2750
686/2750
2064/2750
555/2750
2195/2750
75/1800
setwd("/Volumes/Seagate Backup Plus Drive/global data/1_Avians_SEAsia/PresentDist/2_bioclim_sdm-lulc/2_scaled_hsm")
library(raster)
library(rasterVis)
library(maptools)
library(rgdal)
library(sf)
library(sp)
library(rgeos)
#library(tidyverse)
library(dplyr)
rlist=list.files(getwd(), pattern="tif$", full.names=FALSE)
for(i in rlist) { assign(unlist(strsplit(i, "[.]"))[1], raster(i)) }
s_res = stack(rlist)
outl=readShapePoly("/Volumes/Seagate Backup Plus Drive/global data/1_Avians_SEAsia/sea1-polygon")
sres= crop(s_res, outl)
plot(s_res$Zosterops_uropygialis_p)
summary(s_res$Zosterops_uropygialis_p)
x <- freq(s_res)
s_res
stk=stack(s_res$Accipiter_nanus_p,s_res$Aceros_leucocephalus_p)
x <- freq(stk)
x
x=as.data.frame(x)
x
x <- freq(sres)
x
head(x)
tail(x)
x=as.data.frame(x)
head(x)
summary(x)
x=na.omit(x)
head(x)
class(x)
814/14621
13807/14621
811/14621
13810/14621
7356/14621
292/14621
6973/14621
1694/14621
9480/14621
3447/14621
817/3227
2410/3227
425/3227
2802/3227
11/3227
2800/3227
416/3227
72/3227
2663/3227
522/3227
46/107
61/107
2/107
105/107
43/107
64/107
install.packages("magick")
install.packages("imager")
library(tidyverse)
head(sleepData)
data(msleep)
head(msleep)
m=msleep
m %>% glimpse()
filter(msleep, sleep_total >= 16)
filter(msleep, conservation == en)
filter(msleep, conservation == "en")
m %>% glimpse()
head(msleep)
m=msleep
m %>% glimpse()
m %>% filter(bodywt >=5) %>% glimpse()
m %>% filter(conservation =="en") %>% glimpse()
m %>% filter(bodywt>=2,conservation =="en") %>% glimpse()
## or
m %>% filter(order=="Carnivora"|conservation =="en") %>% glimpse()
library(tidyverse)
data(msleep) ## mammal sleep data
head(msleep)
m=msleep
m %>% glimpse()
m %>% filter(bodywt >=5) %>% glimpse()
m %>% filter(conservation =="en") %>% glimpse()
m %>% filter(bodywt>=2,conservation =="en") %>% glimpse() ##and
## or
m %>% filter(order=="Carnivora"|conservation =="en") %>% glimpse()
m %>% glimpse()
m %>% filter(sleep_total>awake) %>% glimpse()
# do not meet a condition
m %>% filter(order !="Carnivora") %>% glimpse()
# do not meet a condition
m %>% filter(order=="Carnivora")%>% glimpse()
# do not meet a condition
m %>% filter(order !="Carnivora")%>% glimpse()
## compare columns
m %>% filter(sleep_total>awake) %>% glimpse()
filter(m, conservation %in% c("en","vu"))
install.packages("letsR")
require(raster)
require(letsR)
data(PAM)
summary(PAM)
iucn <- lets.iucn(PAM)
path="/Volumes/Seagate Backup Plus Drive/1_students/birdlife_letsr/IUCN_SpeciesRichness/Bird"
path="/Volumes/Seagate Backup Plus Drive/1_students/birdlife_letsr/IUCN_SpeciesRichness"
library(maptools)
install.packages("maps")
install.packages("maps")
library(maps)
amph=readShapePoly("AMPHIBIANS.shp")
library(rgdal)
library(sf)
library(sp)
library(rgeos)
#library(tidyverse)
library(dplyr)
amph=readShapePoly("AMPHIBIANS.shp")
path="/Volumes/Seagate Backup Plus Drive/1_students/birdlife_letsr/IUCN_SpeciesRichness/Bird"
bird=lets.presab.birds(path, xmn=118, xmx=119, ymn=9, ymx=10.5,reso=0.01)
birdRich=bird$R
iucn <- lets.iucn(bird)
ras <- bird[[2]]
VUrich <- rowSums(bird[[1]][, (which(iucn$Status == "VU")+2)])
lets.iucn("Pongo pygmaeus")
plot(bird, xlab = "Longitude", ylab = "Latitude",
main = "Ramphastos species Richness")
#iucn <- lets.iucn(bird)
v2=c(
"Anas luzonica", "Polyplectron napoleonis", "Phapitreron leucotis", "Ptilinopus occipitalis", "Caprimulgus manillensis", "Collocalia troglodytes",
"Aerodramus mearnsi", "Hierococcyx pectoralis", "Amaurornis olivacea", "Nisaetus pinskeri", "Otus mantananensis", "Otus fuliginosus",
"Anthracoceros marchei", "Cacatua haematuropygia", "Prioniturus platenae", "Rhipidura nigritorquis", "Corvus philippinus", "Terpsiphone cyanescens",
"Prionochilus plateni", "Aethopyga bella", "Chloropsis palawanensis", "Pardaliparus amabilis", "Orthotomus derbianus", "Alophoixus frater",
"Iole palawanensis", "Pycnonotus cinereifrons", "Zosterornis hypogrammicus", "Zosterops nigrorum", "Malacopteron palawanense", "Trichastoma cinereiceps",
"Ptilocichla falcata", "Sarcops calvus", "Kittacincla nigra", "Cyornis lemprieri", "Ficedula platenae")
PAMsub1<- lets.subsetPAM(bird,v2)
plot(PAMsub1, xlab = "Longitude", ylab = "Latitude",
main = "Endemic bird species richness")
install.packages("rredlist")
library(tidyverse)
data(msleep) ## mammal sleep data
head(msleep)
m=msleep
m %>% glimpse()
m %>% select(matches("vore")) %>% glimpse()
m %>% select(matches("vore")) %>% filter(vore =="omni")%>% glimpse() glimpse()
m %>% select(matches("vore")) %>% filter(vore =="omni")%>% glimpse()
m %>% select(matches("vore")) %>%
filter(vore =="omni")%>% glimpse()
library(tidyverse)
data(msleep) ## mammal sleep data
head(msleep)
m=msleep
m %>% glimpse()
m %>% mutate(S=sleep_total+sleep_rem)%>% glimpse()
m %>% mutate(S=sleep_total+sleep_rem)%>%
filter(!is.na()) %>% glimpse()
m %>% mutate(S=sleep_total+sleep_rem)%>%
filter(!is.na(sleep_total)) %>% glimpse()
m %>% mutate(S=sleep_total+sleep_rem)%>%
filter(!is.na(sleep_total,sleep_rem)) %>% glimpse()
m %>% mutate(S=sleep_total+sleep_rem)%>%
filter(!is.na(sleep_total),!is.na(sleep_rem)) %>% glimpse()
library(tidyverse)
data(msleep) ## mammal sleep data
head(msleep)
m=msleep
m %>% glimpse()
m %>% mutate(S=sleep_rem+sleep_cycle)%>%filter(!is.na(sleep_cycle))
m %>% mutate(S=sleep_rem+sleep_cycle)%>%filter(!is.na(sleep_cycle))%>% glimpse()
m %>% glimpse()
m %>% mutate(S=sleep_total+sleep_rem+sleep_cycle)%>% glimpse()
m %>% mutate(S=sleep_total+sleep_rem+sleep_cycle) %>%filter(!is.na(sleep_rem))%>% glimpse()
m %>% mutate(S=sleep_total+sleep_rem+sleep_cycle) %>%filter(!is.na(sleep_rem),!is.na(sleep_cycle))%>% glimpse()
### create a var and remove the older one
m %>% transmute(S=sleep_total+sleep_rem+sleep_cycle) %>% glimpse()
library(tidyverse)
data(msleep) ## mammal sleep data
head(msleep)
m=msleep
m %>% glimpse()
m %>% group_by(conservation) %>% summarize(n())
m %>% group_by(conservation) %>% %>% glimpse()
m %>% group_by(conservation) %>% glimpse()
m %>% group_by(conservation) %>% summarize(n())
m %>% glimpse()
m %>% group_by(conservation) %>% summarise(n())
m %>% group_by(conservation) %>% summarise (mean_a=mean(awake,na.rm=TRUE))
m %>% group_by(conservation,vore) %>% summarise (mean_a=mean(awake,na.rm=TRUE))
setwd("/Volumes/Seagate Backup Plus Drive/R_datasc/DataProcess_tidyretc")
setwd("/Volumes/Seagate Backup Plus Drive/R_datasc/DataProcess_tidyretc")
df=read.csv("athlete_event.csv")
df=read.csv("athlete_events.csv")
df=read.csv("athlete_events.csv")
setwd("/Volumes/Seagate Backup Plus Drive/R_datasc/DataProcess_tidyretc/section3")
df=read.csv("athlete_events.csv")
library(tidyverse)
head(df)
df %>% glimpse()
df %>% filter(Year=="2016",Season=="Summer")%>% glimpse()
s2016=df %>% filter(Year=="2016",Season=="Summer")%>% glimpse()
s2016=df %>% filter(Year=="2016",Season=="Summer")
s2016 %>% glimpse()
s2016 %>% group_by(Sport) %>% summarise(mage=mean(Age))%>% glimpse()
s2016 %>% group_by(Sport,Sex) %>% summarise(mage=mean(Age))%>% glimpse()
s2016 %>% group_by(Sport)
%>% summarise(mage=mean(Age))%>% glimpse()
s2016 %>% group_by(Sport) %>%
summarise(mage=mean(Age))%>% glimpse()
s2016 %>% group_by(Sport) %>%
do(head(., 2))%>% head()
s2016 %>% group_by(Sport,Sex) %>%
do(head(., 2))%>% head()
### arrange data
s2016 %>% group_by(Sport) %>%
arrange(desc(Age))%>% glimpse()
s2016 %>% group_by(Sport) %>%
summarise(mage=mean(Age))%>% head()
s2016 %>% group_by(Sport) %>%
summarise(mean_age=mean(Age))%>% head()
s2016 %>% group_by(Sport) %>%
summarise(corr=correlation(Height,Weight))%>% head()
s2016 %>% group_by(Sport) %>%
summarise(corr=cor(Height,Weight))%>% head()
s2016 %>% group_by(Sport) %>%
summarise(corr=cor(Height,Weight))%>% filter(!is.na(Height),!is.na(Weight)) %>%
head()
head(s2016)
s2016 %>% group_by(Sport) %>%
summarise(corr=cor(Height,Weight)) %>% filter(!is.na(Height),!is.na(Weight)) %>%
head()
s2016 %>% group_by(Sport) %>%
summarise(corr=cor(Height,Weight)) %>% filter(!is.na(s2016$Height),!is.na(Weight)) %>%
head()
s2016 %>% group_by(Sport) %>%
summarise(corr=cor(Height,Weight)) %>% filter(!is.na(s2016$Height),!is.na(s2016$Weight)) %>%
head()
s2016 %>% group_by(Sport) %>%
summarise(corr=cor(Height,Weight,na.rm=TRUE))%>% head()
df %>% glimpse()
s2016 %>% glimpse()
s2016 %>% group_by(Sport) %>%
summarise(mean_age=mean(Age))%>% head()
s2016 %>% group_by(Sport) %>%
summarise(mean_age=mean(Age),mean_ht=mean(Height))%>% head()
s2016 %>% group_by(Sport) %>%
summarise(mean_age=mean(Age),mean_ht=mean(Height,na.rm=T))%>% head()
s2016 %>% group_by(Sport) %>%
summarise(mean_age=mean(Age),mean_ht=mean(Height,na.rm=T))%>% tail()
s2016 %>% group_by(Sport) %>%
summarise(corrl=cor(Height,Weight)) %>% head()
s2016 %>% group_by(Sport) %>%
summarise(corrl=cor(Height,Weight)) %>% tail()
s2016 %>% group_by(Sport) %>%
arrange(desc(Age))%>% head()
s2016 %>% group_by(Sport) %>%
arrange(asc(Age))%>% head()
s2016 %>% group_by(Sport,Sex) %>%
arrange(desc(Age))%>% head()
s2016 %>% group_by(Sport) %>%
do(head(., 2))%>% head()
